# -*- coding: utf-8 -*-
"""Silhouette.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-lqCH0yZ-OjFq4Tt7FUn2ZdUomyySnVt

Write a program in python to determine the “K” value for K-means clustering using Average Silhoutte method. Consider the “Iris” dataset available with Scikit Learn (with first 3 features as independent variables)and Euclidean Distance. Also provide the plot for the Number of Clusters(K) against Silhoutte Score, and Horizontal Bar Chart for  different Clusters Distance against the Silhoutte Coefficient using Matplotlib. write a simplified code.
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score, silhouette_samples

# Load the Iris dataset
iris = load_iris()
X = iris.data[:, :3]  # Considering only the first 3 features

# Range of K values to try
k_values = range(2, 11)

# Initialize lists to store silhouette scores
silhouette_scores = []

# Iterate over each K value
for k in k_values:
    # Fit KMeans clustering model
    kmeans = KMeans(n_clusters=k, random_state=42)
    cluster_labels = kmeans.fit_predict(X)

    # Compute silhouette score
    silhouette_avg = silhouette_score(X, cluster_labels)
    silhouette_scores.append(silhouette_avg)

# Plot the Number of Clusters(K) against Silhouette Score
plt.plot(k_values, silhouette_scores, marker='o')
plt.xlabel('Number of Clusters (K)')
plt.ylabel('Silhouette Score')
plt.title('Number of Clusters vs Silhouette Score')
plt.grid(True)
plt.show()

